Chapter: 2


Q.1 Which of the following best describes "intention-revealing names" in programming?

	a) Names that hide the purpose of variables and functions
	b) Names that are very short and concise
	c) Names that clearly communicate the intent of variables and functions
	d) Names that are difficult to pronounce


Q.2 What are the dangers of using disinformative names in programming?

	a) They make code easier to understand
	b) They can lead to misunderstandings and errors
	c) They improve collaboration among developers
	d) They have no impact on code quality

Q.3  what is the primary benefit of investing time in choosing meaningful names for variables, functions, and classes?

	a) It improves code execution speed
	b) It simplifies debugging by reducing code complexity
	c) It makes code easier to understand and maintain
	d) It minimizes the use of comments in the code

Q.4 Which practice is described as contributing to disinformation in variable names?

	a) Using descriptive names that clearly indicate their purpose.
	b) Using number series for names like a1, a2, and aN.
	c) Using different names for variables of the same type in different scopes.
	d) Using common prefixes like temp or data for temporary variables.

Q.5 What should method names ideally include?
Answer: Verb or verb phrases

Q.6 Which of the following method names could potentially be improved for clarity?

	a) initializeSettings
	b) loadDataFromServer
	c) update
	d) sendRequestToServer


Chapter: 3

Q.1 What is a sign that a function is doing more than one thing?

	a) If it contains a switch statement.
	b) If it can be reasonably divided into sections.
	c) If it only has one level of abstraction.
	d) If it is named using descriptive names


Chapter: 4

Q.1 Which type of comment is specifically designed to prevent misuse of a code feature?
Answe: Warning comments

Q.2 What is the primary purpose of a comment that explains a test case?

	a) To describe the test's expected outcome.
	b) To document why the test case is turned off or has special conditions.
	c) To provide information about the test case's implementation.
	d) To detail the test case's performance metrics.

Q.3 What should be done if a comment's explanation becomes too complex?

	a) Rewrite the comment to make it simpler.
	b) Refactor the code to simplify the explanation.
	c) Remove the comment and rely on documentation instead.
	d) Add more comments to clarify the initial comment.


Chapter: 5

Q.1 What does vertical openness in code indicate?

	a) Close association of concepts
	b) Separation of different concepts
	c) More lines of code
	d) Less lines of code

Q.2 What does vertical density in code suggest?

	a) Concepts are closely related
	b) Concepts are separated
	c) The code is too complex
	d) The code is too simple

Q.3 Where should variables be declared according to the text?

	a) At the beginning of the file
	b) As close to their usage as possible
	c) At the end of the file
	d) In a separate file

Q.4 What does conceptual affinity in code refer to?

	a) Keeping related code close together
	b) Separating unrelated code
	c) Increasing the size of the code
	d) Reducing the size of the code

Chapter: 6

Q.1 What does the Law of Demeter suggest about method calls on objects?

	a) Methods should only interact with their own class's methods.
	b) Methods should extensively chain calls to enhance functionality.
	c) Methods should call functions on objects returned by other methods.
	d) Methods should interact with all objects in the calling chain

Q.2 What does a class with only public variables and no functions represent?

	a) An abstract interface with hidden implementation.
	b) A data structure or DTO used for simple data transfer.
	c) A fully encapsulated object with strict access control.s.
	d) An object-oriented class with complex internal logic.

Q.3 Which principle is violated if a method directly manipulates the internals of another object through multiple levels of method chaining? 
Answer : The Law of Demeter


Chapter: 7


Q.1 What is the recommended approach to minimise NullPointerException?

	a) Implement defensive null checks in all methods.
	b) Always catch NullPointerException at the top level of application.
	c) Avoid returning Null from methods and prefer using special case patterns or empty collections.
	d) None of these


Q.2 What is the primary advantage of using try-catch-finally block structure?

	a) It ensures that no errors occur during program execution
	b) It ensures the consistent program state.
	c) It completely eliminates the need for handling exceptions.
	d) It reduces the number of exceptions thrown by the program.

Chapter: 9

Q.1 What is a significant downside of "quick and dirty" tests?
Answer: Higher Maintenance Cost

Q.2 What type of tests are considered worse than no tests at all?
Answer: Dirty tests.

Q.3 What is the main goal of TDD (Test-Driven Development)?

	a) To write tests after the code is completed.
	b) To ensure that every function has a corresponding test.
	c) To drive the design of the code through tests.
	d) To maximize code performance through testing.

Q.4 What is a common reason for tests becoming difficult to maintain?

	a) They are too simple and lack detail.
	b) They are not written by the same developer who wrote the code.
	c) They are not kept clean and refactored regularly.
	d) They rely too much on external dependencies.

Chapter: 10

Q.1 What should be done if a large function is broken into smaller functions but results in loss of cohesion?

	a) Combine the functions back into one
	b) Promote variables to instance variables
	c) Split the functions into smaller classes
	d) Increase the number of parameters passed

Q.2 Which of the following best describes a cohesive class?

	a) A class with many methods and few variables
	b) A class where each method manipulates one or more of its variables
	c) A class with many public variables
	d) A class that extends multiple classes

Q.3 Which of the following describes a maximally cohesive class?

	a) Each method manipulates only one variable
	b) Each method uses all of the class's variables
	c) The class has more methods than variables
	d) The class has more variables than methods

Q.4 What should you do when a function within a class wants to share certain variables with other functions?

	a) Convert those variables into global variables
	b) Promote those variables to instance variables of the class
	c) Pass those variables as arguments to all functions
	d) Remove the sharing requirement

Q.5 Which principle advises against writing methods that depend on a large number of instance variables?
Answer: Single Responsibility Principle (SRP)

Q.6 What principle states that a class or module should have one, and only one, reason to change?
Answer: Single Responsibility Principle (SRP)

Q.7 How is the size of a class measured?
Answer: By the number of responsibilities
